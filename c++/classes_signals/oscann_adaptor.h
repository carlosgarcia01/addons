/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a oscann_adaptor.h: ../../OAOI/dbus/oscann.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef OSCANN_ADAPTOR_H
#define OSCANN_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface aura.CVInterface
 */
class CVInterfaceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "aura.CVInterface")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"aura.CVInterface\">\n"
"    <signal name=\"changeSettingsDBus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"value\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"id\"/>\n"
"    </signal>\n"
"    <signal name=\"displayImagesDbus\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"value\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    CVInterfaceAdaptor(QObject *parent);
    virtual ~CVInterfaceAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void changeSettingsDBus(int value, int id);
    void displayImagesDbus(bool value);
};

/*
 * Adaptor class for interface aura.CapturerInterface
 */
class CapturerInterfaceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "aura.CapturerInterface")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"aura.CapturerInterface\">\n"
"    <signal name=\"saveImageDbus\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"timestamp\"/>\n"
"      <arg direction=\"out\" type=\"u\" name=\"msgTo\"/>\n"
"    </signal>\n"
"    <signal name=\"updateImageDBus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"x\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"y\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"width\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"height\"/>\n"
"    </signal>\n"
"    <signal name=\"newValidationImgDBus\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"logo\"/>\n"
"    </signal>\n"
"    <signal name=\"newControlAddedDBus\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"ctrlName\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"ctrlID\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"ctrlMinValue\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"ctrlMaxValue\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"ctrlValue\"/>\n"
"    </signal>\n"
"    <signal name=\"statusChangedDBus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"cameraType\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"width\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"height\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"fps\"/>\n"
"    </signal>\n"
"    <signal name=\"signalTest\"/>\n"
"  </interface>\n"
        "")
public:
    CapturerInterfaceAdaptor(QObject *parent);
    virtual ~CapturerInterfaceAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void newControlAddedDBus(const QString &ctrlName, int ctrlID, int ctrlMinValue, int ctrlMaxValue, int ctrlValue);
    void newValidationImgDBus(bool logo);
    void saveImageDbus(const QString &timestamp, uint msgTo);
    void signalTest();
    void statusChangedDBus(int cameraType, int width, int height, int fps);
    void updateImageDBus(int x, int y, int width, int height);
};

/*
 * Adaptor class for interface aura.DetectorInterface
 */
class DetectorInterfaceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "aura.DetectorInterface")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"aura.DetectorInterface\">\n"
"    <signal name=\"progressDBus\">\n"
"      <arg direction=\"out\" type=\"d\" name=\"percent\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"totalPercent\"/>\n"
"    </signal>\n"
"    <signal name=\"loadingDBus\">\n"
"      <arg direction=\"out\" type=\"d\" name=\"percent\"/>\n"
"    </signal>\n"
"    <signal name=\"ready\"/>\n"
"    <signal name=\"pupilAtDBus\">\n"
"      <arg direction=\"out\" type=\"d\" name=\"x\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"y\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"sx\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"sy\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    DetectorInterfaceAdaptor(QObject *parent);
    virtual ~DetectorInterfaceAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void loadingDBus(double percent);
    void progressDBus(double percent, double totalPercent);
    void pupilAtDBus(double x, double y, double sx, double sy);
    void ready();
};

/*
 * Adaptor class for interface aura.DisplayCTInterface
 */
class DisplayCTInterfaceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "aura.DisplayCTInterface")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"aura.DisplayCTInterface\">\n"
"    <signal name=\"testDurationDBus\">\n"
"      <arg direction=\"out\" type=\"u\" name=\"time\"/>\n"
"    </signal>\n"
"    <signal name=\"stimuliOnViewerDBus\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"flag\"/>\n"
"    </signal>\n"
"    <signal name=\"finishDemoDbus\"/>\n"
"    <signal name=\"saveImagesDbus\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"value\"/>\n"
"    </signal>\n"
"    <signal name=\"scatterDBus\">\n"
"      <arg direction=\"out\" type=\"u\" name=\"index\"/>\n"
"    </signal>\n"
"    <signal name=\"validateDBus\"/>\n"
"    <signal name=\"stimulus2SaveDbus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"x\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"y\"/>\n"
"    </signal>\n"
"    <signal name=\"closeVideoDbus\"/>\n"
"    <signal name=\"deleteFilesDbus\"/>\n"
"    <signal name=\"onCalibrationDBus\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"value\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    DisplayCTInterfaceAdaptor(QObject *parent);
    virtual ~DisplayCTInterfaceAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void closeVideoDbus();
    void deleteFilesDbus();
    void finishDemoDbus();
    void onCalibrationDBus(bool value);
    void saveImagesDbus(bool value);
    void scatterDBus(uint index);
    void stimuliOnViewerDBus(bool flag);
    void stimulus2SaveDbus(int x, int y);
    void testDurationDBus(uint time);
    void validateDBus();
};

/*
 * Adaptor class for interface aura.GUIInterface
 */
class GUIInterfaceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "aura.GUIInterface")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"aura.GUIInterface\">\n"
"    <signal name=\"normalStateDbus\"/>\n"
"    <signal name=\"saveImagesDbus\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"value\"/>\n"
"    </signal>\n"
"    <signal name=\"frequencyDbus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"value\"/>\n"
"    </signal>\n"
"    <signal name=\"lapsDbus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"value\"/>\n"
"    </signal>\n"
"    <signal name=\"keyPressedDbus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"key\"/>\n"
"    </signal>\n"
"    <signal name=\"configDbus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"task\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"numberOfPoints\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"sDist\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"sWidth\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"resolutionX\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"resolutionY\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"stimulusSize\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"clb\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"tst\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"variant\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"time\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"laps\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"frequency\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"imgName\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"directoryName\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"fromRun\"/>\n"
"    </signal>\n"
"    <method name=\"methodName\"/>\n"
"    <signal name=\"shutdownDBus\">\n"
"      <arg direction=\"out\" type=\"u\" name=\"type\"/>\n"
"    </signal>\n"
"    <signal name=\"newD1FileDBus\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"dataFile\"/>\n"
"    </signal>\n"
"    <signal name=\"newSettingsDBus\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"directory\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"dataFile\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"isTst\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"codec\"/>\n"
"    </signal>\n"
"    <signal name=\"configTrackerDBus\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"width\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"height\"/>\n"
"    </signal>\n"
"    <signal name=\"sharedMemoryDbus\"/>\n"
"    <signal name=\"config\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"rmin\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"rmax\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"cannyBlur\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"cannyThld1\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"cannyThld2\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"StarburstPoints\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"online\"/>\n"
"    </signal>\n"
"    <signal name=\"processDBus\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"directory\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"freq\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"width\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"height\"/>\n"
"      <arg direction=\"out\" type=\"u\" name=\"totalFramesToProcess\"/>\n"
"    </signal>\n"
"    <signal name=\"stopDBus\"/>\n"
"    <signal name=\"showStimulus\"/>\n"
"  </interface>\n"
        "")
public:
    GUIInterfaceAdaptor(QObject *parent);
    virtual ~GUIInterfaceAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void methodName();
Q_SIGNALS: // SIGNALS
    void config(int rmin, int rmax, double cannyBlur, double cannyThld1, double cannyThld2, int StarburstPoints, bool online);
    void configDbus(int task, int numberOfPoints, double sDist, double sWidth, int resolutionX, int resolutionY, int stimulusSize, int clb, int tst, int variant, int time, int laps, int frequency, const QString &imgName, const QString &directoryName, bool fromRun);
    void configTrackerDBus(int width, int height);
    void frequencyDbus(int value);
    void keyPressedDbus(int key);
    void lapsDbus(int value);
    void newD1FileDBus(const QString &dataFile);
    void newSettingsDBus(const QString &directory, const QString &dataFile, bool isTst, const QString &codec);
    void normalStateDbus();
    void processDBus(const QString &directory, int freq, int width, int height, uint totalFramesToProcess);
    void saveImagesDbus(bool value);
    void sharedMemoryDbus();
    void showStimulus();
    void shutdownDBus(uint type);
    void stopDBus();
};

/*
 * Adaptor class for interface aura.WriterInterface
 */
class WriterInterfaceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "aura.WriterInterface")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"aura.WriterInterface\">\n"
"    <signal name=\"nextTestDbus\"/>\n"
"  </interface>\n"
        "")
public:
    WriterInterfaceAdaptor(QObject *parent);
    virtual ~WriterInterfaceAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void nextTestDbus();
};

#endif
